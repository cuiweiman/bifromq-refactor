<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.zachary.bifromq</groupId>
        <artifactId>bifromq-refactor</artifactId>
        <version>0.1</version>
    </parent>

    <artifactId>bifromq-metrics</artifactId>
    <description>metrics 一般用于服务检测</description>

    <dependencies>
        <!--应用程序 度量 的 度量库：micrometer-core 包含了 度量 的核心功能
        为基于 JVM 的应用程序的性能监测数据收集提供了一个通用的 API，支持多种度量指标类型，
        这些指标可以用于观察、警报以及对应用程序当前状态做出响应。-->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-core</artifactId>
        </dependency>
        <!--度量库 集成 prometheus-->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>
        <!--高性能单机缓存-->
        <dependency>
            <groupId>com.github.ben-manes.caffeine</groupId>
            <artifactId>caffeine</artifactId>
        </dependency>
        <!--slf4j日志api-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <!-- for test-->
        <!--Java 微基准测试,用于测一个方法的性能好坏-->
        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-core</artifactId>
        </dependency>
        <!--Java 微基准测试,用于测一个方法的性能好坏-->
        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-generator-annprocess</artifactId>
        </dependency>
        <!--
        接口自动化-使用 Awaitility 测试异步代码
        该工具提供轮询的方式，判断操作是否完成，以最短的时间获取异步任务结果。
        官方文档：https://github.com/awaitility/awaitility/wiki/Usage#usage-examples
        -->
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

</project>