// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: commontype/ClientInfo.proto

package com.zachary.bifromq.type;

public interface ClientInfoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:commontype.ClientInfo)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * 属性 tenantId，类型为 string（protobuf类型），1 表示序号，不是值
   * </pre>
   *
   * <code>string tenantId = 1;</code>
   * @return The tenantId.
   */
  java.lang.String getTenantId();
  /**
   * <pre>
   * 属性 tenantId，类型为 string（protobuf类型），1 表示序号，不是值
   * </pre>
   *
   * <code>string tenantId = 1;</code>
   * @return The bytes for tenantId.
   */
  com.google.protobuf.ByteString
      getTenantIdBytes();

  /**
   * <pre>
   * 属性 type，类型为 string（protobuf类型），2 表示序号
   * 调用 客户端 的类型 可以是 外部用户客户端 或 内部服务
   * the type of the calling client could be external user client or internal service
   * </pre>
   *
   * <code>string type = 2;</code>
   * @return The type.
   */
  java.lang.String getType();
  /**
   * <pre>
   * 属性 type，类型为 string（protobuf类型），2 表示序号
   * 调用 客户端 的类型 可以是 外部用户客户端 或 内部服务
   * the type of the calling client could be external user client or internal service
   * </pre>
   *
   * <code>string type = 2;</code>
   * @return The bytes for type.
   */
  com.google.protobuf.ByteString
      getTypeBytes();

  /**
   * <pre>
   * the metadata of the client
   * 客户端的 元数据
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 3;</code>
   */
  int getMetadataCount();
  /**
   * <pre>
   * the metadata of the client
   * 客户端的 元数据
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 3;</code>
   */
  boolean containsMetadata(
      java.lang.String key);
  /**
   * Use {@link #getMetadataMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getMetadata();
  /**
   * <pre>
   * the metadata of the client
   * 客户端的 元数据
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 3;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getMetadataMap();
  /**
   * <pre>
   * the metadata of the client
   * 客户端的 元数据
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 3;</code>
   */
  /* nullable */
java.lang.String getMetadataOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * the metadata of the client
   * 客户端的 元数据
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 3;</code>
   */
  java.lang.String getMetadataOrThrow(
      java.lang.String key);
}
