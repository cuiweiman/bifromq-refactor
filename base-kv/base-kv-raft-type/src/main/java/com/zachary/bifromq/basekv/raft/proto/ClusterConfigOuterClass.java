// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: basekv/raft/ClusterConfig.proto

package com.zachary.bifromq.basekv.raft.proto;

public final class ClusterConfigOuterClass {
  private ClusterConfigOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_basekv_raft_ClusterConfig_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_basekv_raft_ClusterConfig_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\037basekv/raft/ClusterConfig.proto\022\013basek" +
      "v.raft\"p\n\rClusterConfig\022\023\n\013correlateId\030\001" +
      " \001(\t\022\016\n\006voters\030\002 \003(\t\022\020\n\010learners\030\003 \003(\t\022\022" +
      "\n\nnextVoters\030\004 \003(\t\022\024\n\014nextLearners\030\005 \003(\t" +
      "B+\n%com.zachary.bifromq.basekv.raft.prot" +
      "oH\001P\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_basekv_raft_ClusterConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_basekv_raft_ClusterConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_basekv_raft_ClusterConfig_descriptor,
        new java.lang.String[] { "CorrelateId", "Voters", "Learners", "NextVoters", "NextLearners", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
