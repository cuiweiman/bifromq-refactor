syntax = "proto3";
import "basekv/Type.proto";
import "basekv/raft/ClusterConfig.proto";
import "basekv/raft/RaftMessage.proto";
import "basekv/raft/Snapshot.proto";
import "basekv/Snapshot.proto";

package basekv;

option java_multiple_files = true;
option java_package = "com.zachary.bifromq.basekv.proto";
option optimize_for = SPEED;

message WALRaftMessages{
  repeated raft.RaftMessage walMessages = 1;
}

message SnapshotSyncRequest{
  string sessionId = 1;
  KVRangeSnapshot snapshot = 2;
}

message SaveSnapshotDataRequest{
  string sessionId = 1;
  uint32 reqId = 2;
  enum Flag{
    More = 0;
    End = 1;
    Error = 2;
  }
  Flag flag = 3;
  repeated KVPair kv = 4;
}

message SaveSnapshotDataReply{
  string sessionId = 1;
  uint32 reqId = 2;
  enum Result{
    OK = 0;
    NoSessionFound = 1;
    Retry = 2;
    Error = 3;
  }
  Result result = 3;
}

message EnsureRange {
  raft.Snapshot initSnapshot = 1;
}

message EnsureRangeReply {
  enum Result{
    OK = 0;
    Error = 1;
  }
  Result result = 1;
}

message PrepareMergeToRequest{
  string taskId = 1;
  basekv.KVRangeId id = 2; // merger's id
  uint64 ver = 3; // merger's ver
  raft.ClusterConfig config = 4; // merger's config at the moment
  basekv.Range range = 5; // merger's range at the moment
}

message PrepareMergeToReply{
  string taskId = 1;
  bool accept = 2;
}

message MergeRequest{
  string taskId = 1;
  uint64 ver = 2;
  basekv.KVRangeId mergeeId = 3;
  uint64 mergeeVer = 4;
  basekv.Range range = 5;
  string storeId = 6;
}

message MergeReply{
  string taskId = 1;
  bool accept = 2;
}

message MergeDoneRequest{
  string taskId = 1;
  uint64 reqId = 2;
  basekv.KVRangeId id = 3; // merger's id
  uint64 mergeeVer = 4;
  string storeId = 5;
}

message MergeDoneReply{
  string taskId = 1;
  bool accept = 2;
}

message CancelMergingRequest{
  string taskId = 1;
  uint64 ver = 2;
  uint32 reasonCode = 3;
  KVRangeId requester = 4;
}

message CancelMergingReply{
  string taskId = 1;
  bool accept = 2;
}

message KVRangeMessage{
  KVRangeId rangeId = 1;
  optional string hostStoreId = 2; // null for broadcast
  oneof PayloadType{
    WALRaftMessages walRaftMessages = 4;
    SnapshotSyncRequest snapshotSyncRequest = 5;
    SaveSnapshotDataRequest saveSnapshotDataRequest = 6;
    SaveSnapshotDataReply saveSnapshotDataReply = 7;
    EnsureRange ensureRange = 8;
    EnsureRangeReply ensureRangeReply = 9;
    PrepareMergeToRequest prepareMergeToRequest = 10;
    PrepareMergeToReply prepareMergeToReply = 11;
    MergeRequest mergeRequest = 12;
    MergeReply mergeReply = 13;
    CancelMergingRequest cancelMergingRequest = 14;
    CancelMergingReply cancelMergingReply = 15;
    MergeDoneRequest mergeDoneRequest = 16;
    MergeDoneReply mergeDoneReply = 17;
  }
}

message StoreMessage {
  string from = 1;
  KVRangeId srcRange = 3;
  KVRangeMessage payload = 5;
}
