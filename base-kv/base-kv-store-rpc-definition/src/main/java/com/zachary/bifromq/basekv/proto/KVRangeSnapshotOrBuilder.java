// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: basekv/Snapshot.proto

package com.zachary.bifromq.basekv.proto;

public interface KVRangeSnapshotOrBuilder extends
    // @@protoc_insertion_point(interface_extends:basekv.KVRangeSnapshot)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>uint64 ver = 1;</code>
   * @return The ver.
   */
  long getVer();

  /**
   * <code>.basekv.KVRangeId id = 2;</code>
   * @return Whether the id field is set.
   */
  boolean hasId();
  /**
   * <code>.basekv.KVRangeId id = 2;</code>
   * @return The id.
   */
  com.zachary.bifromq.basekv.proto.KVRangeId getId();
  /**
   * <code>.basekv.KVRangeId id = 2;</code>
   */
  com.zachary.bifromq.basekv.proto.KVRangeIdOrBuilder getIdOrBuilder();

  /**
   * <code>optional string checkpointId = 3;</code>
   * @return Whether the checkpointId field is set.
   */
  boolean hasCheckpointId();
  /**
   * <code>optional string checkpointId = 3;</code>
   * @return The checkpointId.
   */
  java.lang.String getCheckpointId();
  /**
   * <code>optional string checkpointId = 3;</code>
   * @return The bytes for checkpointId.
   */
  com.google.protobuf.ByteString
      getCheckpointIdBytes();

  /**
   * <code>uint64 lastAppliedIndex = 4;</code>
   * @return The lastAppliedIndex.
   */
  long getLastAppliedIndex();

  /**
   * <code>.basekv.Range range = 5;</code>
   * @return Whether the range field is set.
   */
  boolean hasRange();
  /**
   * <code>.basekv.Range range = 5;</code>
   * @return The range.
   */
  com.zachary.bifromq.basekv.proto.Range getRange();
  /**
   * <code>.basekv.Range range = 5;</code>
   */
  com.zachary.bifromq.basekv.proto.RangeOrBuilder getRangeOrBuilder();

  /**
   * <code>.basekv.State state = 6;</code>
   * @return Whether the state field is set.
   */
  boolean hasState();
  /**
   * <code>.basekv.State state = 6;</code>
   * @return The state.
   */
  com.zachary.bifromq.basekv.proto.State getState();
  /**
   * <code>.basekv.State state = 6;</code>
   */
  com.zachary.bifromq.basekv.proto.StateOrBuilder getStateOrBuilder();
}
