// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: basekv/KVRangeSettings.proto

package com.zachary.bifromq.basekv.proto;

public interface KVRangeSettingsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:basekv.KVRangeSettings)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>uint64 ver = 1;</code>
   * @return The ver.
   */
  long getVer();

  /**
   * <code>.basekv.KVRangeId id = 2;</code>
   * @return Whether the id field is set.
   */
  boolean hasId();
  /**
   * <code>.basekv.KVRangeId id = 2;</code>
   * @return The id.
   */
  com.zachary.bifromq.basekv.proto.KVRangeId getId();
  /**
   * <code>.basekv.KVRangeId id = 2;</code>
   */
  com.zachary.bifromq.basekv.proto.KVRangeIdOrBuilder getIdOrBuilder();

  /**
   * <code>.basekv.Range range = 3;</code>
   * @return Whether the range field is set.
   */
  boolean hasRange();
  /**
   * <code>.basekv.Range range = 3;</code>
   * @return The range.
   */
  com.zachary.bifromq.basekv.proto.Range getRange();
  /**
   * <code>.basekv.Range range = 3;</code>
   */
  com.zachary.bifromq.basekv.proto.RangeOrBuilder getRangeOrBuilder();

  /**
   * <pre>
   * the store hosting the leader replica among the working replicas
   * </pre>
   *
   * <code>string leader = 4;</code>
   * @return The leader.
   */
  java.lang.String getLeader();
  /**
   * <pre>
   * the store hosting the leader replica among the working replicas
   * </pre>
   *
   * <code>string leader = 4;</code>
   * @return The bytes for leader.
   */
  com.google.protobuf.ByteString
      getLeaderBytes();

  /**
   * <code>.basekv.raft.ClusterConfig config = 5;</code>
   * @return Whether the config field is set.
   */
  boolean hasConfig();
  /**
   * <code>.basekv.raft.ClusterConfig config = 5;</code>
   * @return The config.
   */
  com.zachary.bifromq.basekv.raft.proto.ClusterConfig getConfig();
  /**
   * <code>.basekv.raft.ClusterConfig config = 5;</code>
   */
  com.zachary.bifromq.basekv.raft.proto.ClusterConfigOrBuilder getConfigOrBuilder();

  /**
   * <code>map&lt;string, .basekv.raft.RaftNodeSyncState&gt; repStatus = 6;</code>
   */
  int getRepStatusCount();
  /**
   * <code>map&lt;string, .basekv.raft.RaftNodeSyncState&gt; repStatus = 6;</code>
   */
  boolean containsRepStatus(
      java.lang.String key);
  /**
   * Use {@link #getRepStatusMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.zachary.bifromq.basekv.raft.proto.RaftNodeSyncState>
  getRepStatus();
  /**
   * <code>map&lt;string, .basekv.raft.RaftNodeSyncState&gt; repStatus = 6;</code>
   */
  java.util.Map<java.lang.String, com.zachary.bifromq.basekv.raft.proto.RaftNodeSyncState>
  getRepStatusMap();
  /**
   * <code>map&lt;string, .basekv.raft.RaftNodeSyncState&gt; repStatus = 6;</code>
   */
  /* nullable */
com.zachary.bifromq.basekv.raft.proto.RaftNodeSyncState getRepStatusOrDefault(
      java.lang.String key,
      /* nullable */
com.zachary.bifromq.basekv.raft.proto.RaftNodeSyncState         defaultValue);
  /**
   * <code>map&lt;string, .basekv.raft.RaftNodeSyncState&gt; repStatus = 6;</code>
   */
  com.zachary.bifromq.basekv.raft.proto.RaftNodeSyncState getRepStatusOrThrow(
      java.lang.String key);
  /**
   * Use {@link #getRepStatusValueMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.Integer>
  getRepStatusValue();
  /**
   * <code>map&lt;string, .basekv.raft.RaftNodeSyncState&gt; repStatus = 6;</code>
   */
  java.util.Map<java.lang.String, java.lang.Integer>
  getRepStatusValueMap();
  /**
   * <code>map&lt;string, .basekv.raft.RaftNodeSyncState&gt; repStatus = 6;</code>
   */
  int getRepStatusValueOrDefault(
      java.lang.String key,
      int defaultValue);
  /**
   * <code>map&lt;string, .basekv.raft.RaftNodeSyncState&gt; repStatus = 6;</code>
   */
  int getRepStatusValueOrThrow(
      java.lang.String key);
}
